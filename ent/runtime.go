// Code generated by ent, DO NOT EDIT.

package ent

import (
	"dg-test/ent/attendance"
	"dg-test/ent/schema"
	"dg-test/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	attendanceFields := schema.Attendance{}.Fields()
	_ = attendanceFields
	// attendanceDescType is the schema descriptor for type field.
	attendanceDescType := attendanceFields[2].Descriptor()
	// attendance.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	attendance.TypeValidator = attendanceDescType.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
}
